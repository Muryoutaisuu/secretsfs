---
### GENERAL
# CONFIG_PATHS:
# - /etc/secretsfs/
# - $HOME/.secretsfs
# CONFIG_FILE: secretsfs  # without file type

# BACKGROUND MODE
PIDFILENAME: /var/run/secretsfs.pid
PIDFILEPERM: 0640
LOGFILENAME: /var/log/secretsfs.log
LOGFILEPERM: 0640
WORKDIR: "./"
UMASK: 027

# ALIAS USER
# This configuration acts similarly to sudo -u <username>
# All other plugins treat user A as if he were user B
# e.g. instead of using /home/userA/.vault_roleid, use /home/userB/.vault_roleid
# as $HOME in $FILE_ROLEID        =                              =
# Works recursively
#
# ALIAS_USER:
#   <usernameA>: <usernameB>

### FIO
ENABLED_FIOS:
- secretsfiles
- templatefiles

# templatefiles
PATH_TO_TEMPLATES: /etc/secretsfs/templates/


### STORE
CURRENT_STORE: Vault

# vault
# path configuration defines, where to look for the vault roleid token
# $HOME will be substituted with the user's corresponding home directory
# according to variable HomeDir in https://golang.org/pkg/os/user/#User
# old: FILE_ROLEID: .vault-roleid
FILE_ROLEID: "$HOMEDIR/.vault-roleid"

# FILE_ROLEID_USER configures paths per user, may be used to overwrite default
# FILE_ROLEID for some users
# takes precedence over FILE_ROLEID
# FILE_ROLEID_USER will *NOT* fallback to FILE_ROLEID
#FILE_ROLEID_USER:
#  <usernameA>: <path>
VAULT_ADDR: http://127.0.0.1:8200
# taken from https://www.vaultproject.io/api/secret/kv/kv-v2.html
MTDATA: secret/metadata/
DTDATA: secret/data/


# fuse does not allow the character '/' inside of names of directories or files
# in vault k=v pairs of one secret will be shown as files, where k is the name
# of the file and v the value. k may also include names with a '/'.
# Those slashes will be substituted with the following character
# may also use some special characters, e.g. '§' or '°'
subst_char: _
