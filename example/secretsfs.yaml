
---
# General
general:
  configuration:
    paths:
      #- /etc/secretsfs/
      #- $HOME/.secretsfs
    #configfile: secretsfs  # without file type

  # logging levels may be: {debug,info,warn,error}
  logging:
    level: info

  # fuse does not allow the character '/' inside of names of directories or files
  # in vault k=v pairs of one secret will be shown as files, where k is the name
  # of the file and v the value. k may also include names with a '/'.
  # Those slashes will be substituted with the following character
  # may also use some special characters, e.g. '§' or '°'
  substchar: _

# TLS Configurations
tls:
  #cacert: <path to PEM-encoded CA file>
  #capath: <path to directory of PEM-encoded CA files>
  #clientcert: <path to certificate for backend communication>
  #clientkey: <path to private key for backend communication>
  #tlsservername: <used for setting SNI host>
  #insecure: <disable TLS verification>

fio:
  enabled:
    - secretsfiles
    - templatefiles
  templatefiles:
    templatespath: /etc/secretsfs/templates/

store:
  enabled: vault
  vault:
    roleid:
      # path configuration defines, where to look for the vault roleid token
      # $HOME will be substituted with the user's corresponding home directory
      # according to variable HomeDir in https://golang.org/pkg/os/user/#User
      # it *MUST* be uppcerase
      file: "$HOME/.vault-roleid"

      # useroverride configures paths per user, may be used to overwrite default
      # store.vault.roleid.file for some users
      # takes precedence over store.vault.roleid.file
      # store.vault.roleid.useroverride will *NOT* fallback to store.vault.roleid.file
      #useroverride:
      #  <usernameA>: <path>

    # address of the vault instance, that shall be accessed
    # differenciates between http:// and https:// protocols
    # defaults to a local dev instance
    addr: http://127.0.0.1:8200

    # taken from https://www.vaultproject.io/api/secret/kv/kv-v2.html
    mtdata: secret/
    dtdata: secret/
